package com.selenium.test;

// Generated by Selenium IDE

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.utility.Constant;
import com.utility.ExcelUtils;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.net.MalformedURLException;
import java.net.URL;


public class signIn_payment {
  private WebDriver driver;
  String final_Amount ;
 
  
  
  
  @Test
  public void signIn() throws Exception {
   
    driver.findElement(By.linkText("Sign in")).click();
    
    ExcelUtils.setExcelFile(Constant.Path_TestData + Constant.File_TestData,"sheet1");
    
    String email = ExcelUtils.getCellData(1,1);
    String password = ExcelUtils.getCellData(1,5);
    
    
    driver.findElement(By.id("email")).click();
    driver.findElement(By.id("email")).click();
    
      WebElement element1 = driver.findElement(By.id("email"));
      Actions builder1 = new Actions(driver);
      builder1.doubleClick(element1).perform();
    
    driver.findElement(By.id("email")).sendKeys(email);
    driver.findElement(By.id("passwd")).click();
    driver.findElement(By.id("passwd")).sendKeys(password);
    driver.findElement(By.cssSelector("#SubmitLogin > span")).click();
    driver.findElement(By.xpath("//*[@id=\"block_top_menu\"]/ul/li[1]")).click();
    JavascriptExecutor js = (JavascriptExecutor) driver;
    js.executeScript("window.scrollBy(0,1000)");
    
    
    
    Actions builder = new Actions(driver);
    
   WebElement ele = driver.findElement(By.xpath("//*[@id=\"center_column\"]/ul/li[1]/div/div[1]/div/a[1]/img"));
   WebElement ele1 = driver.findElement(By.xpath("//*[@id=\"center_column\"]/ul/li[1]/div/div[1]/div/a[2]/span"));
   
   builder.moveToElement(ele).perform();
   
   
   
   builder.moveToElement(ele1).click().perform();
   
   Thread.sleep(5000);
    driver.switchTo().frame(0);
    
    //increase qty by 2
    
    driver.findElement(By.cssSelector(".icon-plus")).click();
    
    
    driver.findElement(By.id("quantity_wanted")).click();
   
   
   
    
      WebElement element2 = driver.findElement(By.id("quantity_wanted"));
      Actions builder2 = new Actions(driver);
      builder2.doubleClick(element2).perform();
    
    driver.findElement(By.cssSelector(".exclusive > span")).click();
    driver.switchTo().defaultContent();
    driver.findElement(By.cssSelector(".ajax_block_products_total")).click();
    driver.findElement(By.cssSelector(".ajax_block_products_total")).click();
    
      WebElement element3 = driver.findElement(By.cssSelector(".ajax_block_products_total"));
      Actions builder3 = new Actions(driver);
      builder3.doubleClick(element3).perform();
    
    driver.findElement(By.cssSelector(".ajax_cart_shipping_cost:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".ajax_cart_shipping_cost:nth-child(2)")).click();
    
      WebElement element4 = driver.findElement(By.cssSelector(".ajax_cart_shipping_cost:nth-child(2)"));
      Actions builder4 = new Actions(driver);
      builder4.doubleClick(element4).perform();
    
    driver.findElement(By.cssSelector(".button-medium:nth-child(2) > span")).click();
    driver.findElement(By.id("total_price")).click();
    driver.findElement(By.id("total_price")).click();
    
      WebElement element5 = driver.findElement(By.id("total_price"));
      Actions builder5 = new Actions(driver);
      builder5.doubleClick(element5).perform();
    
    driver.findElement(By.id("total_price")).click();
    driver.findElement(By.cssSelector(".standard-checkout > span")).click();
    driver.findElement(By.cssSelector(".button:nth-child(4) > span")).click();
    driver.findElement(By.cssSelector(".standard-checkout > span")).click();
    driver.findElement(By.cssSelector(".fancybox-item")).click();
    driver.findElement(By.id("cgv")).click();
    driver.findElement(By.cssSelector(".standard-checkout > span")).click();
    driver.findElement(By.id("total_price")).click();
    driver.findElement(By.id("total_price")).click();
    
      WebElement element6 = driver.findElement(By.id("total_price"));
      Actions builder6 = new Actions(driver);
      builder6.doubleClick(element6).perform();
    
    final_Amount=driver.findElement(By.id("total_price")).getText();
    
    System.out.println("total cost :"+final_Amount);
    
              
    driver.findElement(By.cssSelector(".bankwire > span")).click();
    driver.findElement(By.cssSelector("#cart_navigation span")).click();
    driver.findElement(By.cssSelector(".price > strong")).click();
    driver.findElement(By.cssSelector(".price > strong")).click();
    
      WebElement element7 = driver.findElement(By.cssSelector(".price > strong"));
      Actions builder7 = new Actions(driver);
      builder7.doubleClick(element7).perform();
    
    driver.findElement(By.linkText("Back to orders")).click();
    driver.findElement(By.cssSelector(".account > span")).click();
    driver.findElement(By.cssSelector(".col-xs-12:nth-child(1) > .myaccount-link-list > li:nth-child(1) span")).click();
    driver.findElement(By.cssSelector(".history_price > .price")).click();
    driver.findElement(By.cssSelector(".history_price > .price")).click();
    
      WebElement element8 = driver.findElement(By.cssSelector(".history_price > .price"));
      Actions builder8 = new Actions(driver);
      builder8.doubleClick(element8).perform();
      
     
    
  
}
  
  @BeforeMethod
  public void beforeMethod() {
	  

	  System.setProperty("webdriver.chrome.driver", "C:\\Users\\Nilesh\\Desktop\\selenium\\chromedriver.exe");
		//System.setProperty("webdriver.firefox.marionette","C:\\Users\\Nilesh\\Desktop\\selenium\\geckodriver.exe");
		 //driver = new FirefoxDriver();
		 driver=new ChromeDriver();
      //Put a Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception
	        driver.manage().window().maximize();

      driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

      //Launch the Online Store Website

      driver.get(Constant.URL);
     
      
  }
  
   
 
	  
  
  
  
  @AfterMethod
  public void afterMethod() throws Exception { 


     
      driver.quit();
      ExcelUtils.setCellData("Pass", 1,17);
  }

}
